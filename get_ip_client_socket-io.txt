var io = require('socket.io').listen(server);

io.sockets.on('connection', function (socket) {
  var address = socket.handshake.address;
  console.log('New connection from ' + address.address + ':' + address.port);
});



for 1.0.4:

io.sockets.on('connection', function (socket) {
  var socketId = socket.id;
  var clientIp = socket.request.connection.remoteAddress;

  console.log(clientIp);
});

shareimprove this answer
edited Sep 25 '15 at 14:19
Aperçu
27.1k95779
answered Jun 5 '14 at 23:08
flatroze
61153

    Where did you get the info? I thought I had read all the docs for socket.io and did not see this. It worked perfectly to solve my problems similar to the OP. – MikeB Jun 13 '14 at 18:42
    1
    Just console.log socket to view all of the available information, I believe it keeps changing because it's not documented. – Pez Cuckow Jun 19 '14 at 9:04
    1
    It doesn't really work in 1.0.6 – Jugo Jul 1 '14 at 12:18
    4
    In v1.2.1, socket.request.connection.remoteAddress and socket.request.connection.remotePort work for me. However, I didn't see either of these properties listed when I tried: console.log(util.inspect(socket.request.connection, {showHidden: true, colors: true})); Why not? – Jeffrey LeCours Dec 15 '14 at 2:49
    1
    Works in 1.3.4 also. Thanks – lima_fil Feb 15 '15 at 21:15

show 6 more comments
up vote
20
down vote

If you use an other server as reverse proxy all of the mentioned fields will contain localhost. The easiest workaround is to add headers for ip/port in the proxy server.

Example for nginx: add this after your proxy_pass:

proxy_set_header  X-Real-IP $remote_addr;
proxy_set_header  X-Real-Port $remote_port;

This will make the headers available in the socket.io node server:

var ip = socket.handshake.headers["x-real-ip"];
var port = socket.handshake.headers["x-real-port"];

Note that the header is internally converted to lower case.

If you are connecting the node server directly to the client,

var ip = socket.conn.remoteAddress;

works with socket.io version 1.4.6 for me.
shareimprove this answer
a    This is the best solution, the other answers do not work if nodejs is behind a proxy – Alfredo Gt Nov 8 '16 at 16:19

